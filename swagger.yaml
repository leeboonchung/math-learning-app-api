openapi: 3.0.0
info:
  title: Math Learning App API
  version: 1.0.0
  description: A comprehensive API for a math learning application with PostgreSQL backend
  contact:
    name: API Support
    email: support@mathlearningapp.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:3000/api
    description: Development server
  - url: https://api.mathlearningapp.com/api
    description: Production server

security:
  - bearerAuth: []

paths:
  /health:
    get:
      summary: Health check endpoint
      description: Returns the current status of the API
      tags:
        - Health
      security: []
      responses:
        '200':
          description: API is running successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Math Learning App API is running
                  timestamp:
                    type: string
                    format: date-time

  /auth/register:
    post:
      summary: Register a new user account
      tags:
        - Authentication
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
              properties:
                username:
                  type: string
                  minLength: 3
                  maxLength: 30
                  pattern: '^[a-zA-Z0-9]+$'
                  description: Username (alphanumeric, 3-30 characters)
                email:
                  type: string
                  format: email
                  description: Valid email address
                password:
                  type: string
                  minLength: 6
                  description: Password (minimum 6 characters)
            example:
              username: johndoe
              email: john@example.com
              password: password123
      responses:
        '201':
          description: User successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '409':
          $ref: '#/components/responses/ConflictError'

  /auth/login:
    post:
      summary: Login with existing credentials
      tags:
        - Authentication
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
            example:
              email: john@example.com
              password: password123
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/AuthenticationError'

  /auth/me:
    get:
      summary: Get current user information
      tags:
        - Authentication
      responses:
        '200':
          description: Current user information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          $ref: '#/components/responses/AuthenticationError'

  /lessons:
    get:
      summary: Get all lessons with progress status
      description: Returns all available lessons. If authenticated, includes user progress data.
      tags:
        - Lessons
      security:
        - bearerAuth: []
        - {}
      responses:
        '200':
          description: List of lessons with progress information
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Lesson'

  /lessons/{id}:
    get:
      summary: Get specific lesson with problems
      description: Returns lesson details with problems. Correct answers are not included for security.
      tags:
        - Lessons
      security:
        - bearerAuth: []
        - {}
      parameters:
        - name: id
          in: path
          required: true
          description: Lesson ID
          schema:
            type: integer
            minimum: 1
          example: 1
      responses:
        '200':
          description: Lesson details with problems
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/LessonWithProblems'
        '400':
          $ref: '#/components/responses/ValidationError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /lessons/{id}/submit:
    post:
      summary: Submit answers for a lesson
      description: Submit answers with attempt_id for idempotent processing. Returns XP, streak, and progress information.
      tags:
        - Lessons
      parameters:
        - name: id
          in: path
          required: true
          description: Lesson ID
          schema:
            type: integer
            minimum: 1
          example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - attempt_id
                - answers
              properties:
                attempt_id:
                  type: string
                  format: uuid
                  description: Unique attempt identifier (UUID v4)
                answers:
                  type: object
                  additionalProperties:
                    type: string
                  description: Map of problem_id to answer
                  example:
                    "1": "8"
                    "2": "19"
                    "3": "43"
            example:
              attempt_id: 550e8400-e29b-41d4-a716-446655440000
              answers:
                "1": "8"
                "2": "19"
                "3": "43"
      responses:
        '200':
          description: Submission processed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/SubmissionResult'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '422':
          $ref: '#/components/responses/UnprocessableEntityError'

  /profile:
    get:
      summary: Get user profile with statistics
      description: Returns comprehensive user statistics including XP, streaks, and progress information
      tags:
        - Profile
      responses:
        '200':
          description: User profile and statistics
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/UserProfile'
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT authorization token

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          description: User ID
        username:
          type: string
          description: Username
        email:
          type: string
          format: email
          description: User email address
        total_xp:
          type: integer
          description: Total experience points earned
        current_streak:
          type: integer
          description: Current learning streak
        best_streak:
          type: integer
          description: Best learning streak achieved
        created_at:
          type: string
          format: date-time
          description: Account creation timestamp
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp

    Lesson:
      type: object
      properties:
        id:
          type: integer
          description: Lesson ID
        title:
          type: string
          description: Lesson title
        description:
          type: string
          description: Lesson description
        difficulty_level:
          type: integer
          minimum: 1
          maximum: 5
          description: Difficulty level (1-5)
        xp_reward:
          type: integer
          description: XP reward for completing the lesson
        order_index:
          type: integer
          description: Order in the lesson sequence
        is_completed:
          type: boolean
          description: Whether the user has completed this lesson
        best_score:
          type: number
          format: float
          description: Best score achieved (0-100)
        attempts_count:
          type: integer
          description: Number of attempts made
        last_attempted_at:
          type: string
          format: date-time
          nullable: true
          description: Last attempt timestamp
        completed_at:
          type: string
          format: date-time
          nullable: true
          description: Completion timestamp
        created_at:
          type: string
          format: date-time
          description: Lesson creation timestamp

    LessonWithProblems:
      allOf:
        - $ref: '#/components/schemas/Lesson'
        - type: object
          properties:
            problems:
              type: array
              items:
                $ref: '#/components/schemas/Problem'

    Problem:
      type: object
      properties:
        id:
          type: integer
          description: Problem ID
        question:
          type: string
          description: The math problem question
        problem_type:
          type: string
          enum:
            - multiple_choice
            - text_input
          description: Type of problem
        options:
          type: array
          items:
            type: string
          description: Multiple choice options (if applicable)
        order_index:
          type: integer
          description: Order within the lesson

    SubmissionResult:
      type: object
      properties:
        attempt_id:
          type: string
          format: uuid
          description: Attempt identifier
        score:
          type: number
          format: float
          description: Score achieved (0-100)
        xp_earned:
          type: integer
          description: Experience points earned
        is_completed:
          type: boolean
          description: Whether the lesson was completed (score >= 70%)
        correct_answers:
          type: integer
          description: Number of correct answers
        total_problems:
          type: integer
          description: Total number of problems
        current_streak:
          type: integer
          description: Updated current streak
        total_xp:
          type: integer
          description: Updated total XP
        progress_percentage:
          type: integer
          description: Overall progress percentage

    UserProfile:
      type: object
      properties:
        user_id:
          type: integer
          description: User ID
        username:
          type: string
          description: Username
        email:
          type: string
          format: email
          description: User email
        total_xp:
          type: integer
          description: Total experience points
        current_streak:
          type: integer
          description: Current learning streak
        best_streak:
          type: integer
          description: Best streak achieved
        completed_lessons:
          type: integer
          description: Number of completed lessons
        total_lessons:
          type: integer
          description: Total available lessons
        progress_percentage:
          type: integer
          description: Overall progress percentage
        created_at:
          type: string
          format: date-time
          description: Account creation timestamp
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp

    AuthResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            user:
              $ref: '#/components/schemas/User'
            token:
              type: string
              description: JWT authentication token

    UserResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            user:
              $ref: '#/components/schemas/User'

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error type
        message:
          type: string
          description: Error message
        details:
          type: array
          items:
            type: object
          description: Detailed error information

  responses:
    ValidationError:
      description: Validation error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: Validation Error
            message: "\"email\" must be a valid email"

    AuthenticationError:
      description: Authentication required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: Authentication Error
            message: Access token is required

    NotFoundError:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: Not Found
            message: Lesson not found

    ConflictError:
      description: Resource already exists
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: Conflict Error
            message: User with this email already exists

    UnprocessableEntityError:
      description: Unprocessable entity
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: Validation Error
            message: Lesson has no problems to grade

tags:
  - name: Authentication
    description: User authentication and registration endpoints
  - name: Lessons
    description: Lesson management and submission endpoints
  - name: Profile
    description: User profile and statistics endpoints
  - name: Health
    description: API health check endpoints
